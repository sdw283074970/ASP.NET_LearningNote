@*
//Q: 现在知道如何在View文件中通过Model来调用来自不同对象的数据，但如何才能同时将结果显示出来？
//A: 需要用到剃刀语法(RazorSyntax)。剃刀语法也是一种标记语法，其作用为允许开发者在进行Web开发时在网页中嵌入服务器端语言，如C#。当网页被写入浏览器时，
  //基于服务器的代码能够创建动态内容。在网页加载时，服务器在向浏览器返回页面之前，会执行页面内的基于服务器代码。由于是在服务器上运行，这种代码能执行复杂
  //的任务，比如访问数据库。

//Q: 如何使用RazorSyntax?
//A: 在语句前加"@"符号即可。如：
*@

<ul>    //无序列表，即没有编号，只有原点在前面
@for (int i = 0; i < 10; i++) 
{
<li>@i</li>   //在代码块中可以同时使用html标签和C#语句，编译器会编译一切
}
</ul>

@*
//Q: 这对同时渲染数据有什么帮助？
//A: 只用在View布局上新加一个区块，如无需列表<ul></ul>或有序列表<ol></ol>甚至头部标题<h3></h3>，往区块中使用剃刀语法填充数据，即可同时渲染数据。
  //如，除了要显示电影名字，还要显示租借人的名字列表，并且如果租借人列表为空，则说明电影没有被租过；如果租过这电影的人数大于5，则说明电影很受欢迎，
  //需要将这个电影分到“Popular”类下。为了实现需求，我们可以有以下代码：
*@

@model Vidly.ViewModels.RandomMovieViewModel
@{
    ViewBag.Title = "RandomMovie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{ 
    var className = Model.Customers.Count > 5 ? "Popular" : null;   //如果租过人数大于5，则为一个className变量赋为“Popular”,否则为空
}

<h2 class="@className">@Model.Movie.Name</h2>  //头部显示电影名，如果className有值，则h2被分为类；否则不被分类
@if (Model)
<ul>    //无序区块显示租借人名字
@foreach (var c in Model.Customers)   //剃刀语法标记C#语言，即服务器端语言
{
    <li>@c.Name</li>    //迭代输出租借人名字
}
</ul>

  @*可以将以上条件归类的方法应用到任何需要动态调整属性的地方，不仅仅是class。*@
 
@*
//Q: 剃刀语法如何注解？
//A: @*注解*@。
*@
